{
  "api/Environs.AuthenticationOptions.html": {
    "href": "api/Environs.AuthenticationOptions.html",
    "title": "Class AuthenticationOptions | Environs API Reference",
    "keywords": "Class AuthenticationOptions Namespace Environs Assembly Environs.dll Authentication options public class AuthenticationOptions Inheritance object AuthenticationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Impersonate Gets or sets a value indicating whether this AuthenticationOptions is impersonate. public bool Impersonate { get; set; } Property Value bool true if impersonate; otherwise, false. Password Gets or sets the password. public string Password { get; set; } Property Value string The password. UserName Gets or sets the name of the user. public string UserName { get; set; } Property Value string The name of the user."
  },
  "api/Environs.CommonClasses.html": {
    "href": "api/Environs.CommonClasses.html",
    "title": "Class CommonClasses | Environs API Reference",
    "keywords": "Class CommonClasses Namespace Environs Assembly Environs.dll Common WMI classes public class CommonClasses Inheritance object CommonClasses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommonClasses(string) Initializes a new instance of the CommonClasses class. protected CommonClasses(string name) Parameters name string The name. Properties Battery Gets the battery. public static CommonClasses Battery { get; } Property Value CommonClasses The battery. Bios Gets the bios. public static CommonClasses Bios { get; } Property Value CommonClasses The bios. ComputerSystemProduct Gets the computer system product. public static CommonClasses ComputerSystemProduct { get; } Property Value CommonClasses The computer system product. DataFiles Gets the data files. public static CommonClasses DataFiles { get; } Property Value CommonClasses The data files. DiskDrive Gets the disk drive. public static CommonClasses DiskDrive { get; } Property Value CommonClasses The disk drive. InstalledSoftware Gets the installed software. public static CommonClasses InstalledSoftware { get; } Property Value CommonClasses The installed software. LoggedOnUser Gets the logged on user. public static CommonClasses LoggedOnUser { get; } Property Value CommonClasses The logged on user. Memory Gets the memory. public static CommonClasses Memory { get; } Property Value CommonClasses The memory. Monitor Gets the monitor. public static CommonClasses Monitor { get; } Property Value CommonClasses The monitor. NetworkAdapterConfig Gets the network adapter configuration. public static CommonClasses NetworkAdapterConfig { get; } Property Value CommonClasses The network adapter configuration. NetworkDrives Gets the network drives. public static CommonClasses NetworkDrives { get; } Property Value CommonClasses The network drives. OperatingSystem Gets the operating system. public static CommonClasses OperatingSystem { get; } Property Value CommonClasses The operating system. PrintDrivers Gets the print drivers. public static CommonClasses PrintDrivers { get; } Property Value CommonClasses The print drivers. Printers Gets the printers. public static CommonClasses Printers { get; } Property Value CommonClasses The printers. RunningProcesses Gets the running processes. public static CommonClasses RunningProcesses { get; } Property Value CommonClasses The running processes. Services Gets the services. public static CommonClasses Services { get; } Property Value CommonClasses The services. StartupCommands Gets the startup commands. public static CommonClasses StartupCommands { get; } Property Value CommonClasses The startup commands. Methods ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators explicit operator CommonClasses(string) Performs an explicit conversion from string to CommonClasses. public static explicit operator CommonClasses(string wmiClass) Parameters wmiClass string The WMI class. Returns CommonClasses The result of the conversion. implicit operator string(CommonClasses) Performs an implicit conversion from CommonClasses to string. public static implicit operator string(CommonClasses wmiClass) Parameters wmiClass CommonClasses The WMI class. Returns string The result of the conversion."
  },
  "api/Environs.Environment.html": {
    "href": "api/Environs.Environment.html",
    "title": "Class Environment | Environs API Reference",
    "keywords": "Class Environment Namespace Environs Assembly Environs.dll WMI environment query helper public class Environment Inheritance object Environment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Environment(string, AuthenticationOptions) Initializes a new instance of the Environment class. public Environment(string server = \"localhost\", AuthenticationOptions options = null) Parameters server string The server. options AuthenticationOptions The options. Properties Namespaces Gets or sets the namespaces. public string[] Namespaces { get; set; } Property Value string[] The namespaces. Options Gets the options. public AuthenticationOptions Options { get; } Property Value AuthenticationOptions The options. Server Gets the server. public string Server { get; } Property Value string The server. Methods Execute(CommonClasses, string) Executes the specified management path. public IEnumerable<dynamic> Execute(CommonClasses managementPath, string nameSpace = \"root\\\\cimv2\") Parameters managementPath CommonClasses The management path. nameSpace string The name space. Returns IEnumerable<dynamic> The values of the management path Execute(string, string) Executes the specified management path. public ManagementObjectCollection Execute(string query, string nameSpace = \"root\\\\cimv2\") Parameters query string The query. nameSpace string The name space. Returns ManagementObjectCollection The values of the management path"
  },
  "api/Environs.HelperClasses.Applications.html": {
    "href": "api/Environs.HelperClasses.Applications.html",
    "title": "Class Applications | Environs API Reference",
    "keywords": "Class Applications Namespace Environs.HelperClasses Assembly Environs.dll Applications helpers public static class Applications Inheritance object Applications Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstalledApplications(string, AuthenticationOptions) Gets the installed applications. public static IEnumerable<string> GetInstalledApplications(string machineName = \"localhost\", AuthenticationOptions options = null) Parameters machineName string Name of the machine. options AuthenticationOptions The options. Returns IEnumerable<string> The installed applications."
  },
  "api/Environs.HelperClasses.NetworkHelper.html": {
    "href": "api/Environs.HelperClasses.NetworkHelper.html",
    "title": "Class NetworkHelper | Environs API Reference",
    "keywords": "Class NetworkHelper Namespace Environs.HelperClasses Assembly Environs.dll Helper methods for network related items. public static class NetworkHelper Inheritance object NetworkHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetIPv4Address(string) Gets the local IPv4 address. public static string GetIPv4Address(string machineName = \"localhost\") Parameters machineName string Name of the machine. Returns string The local IPv4 address. GetIPv6Address(string) Gets the local IPv6 address. public static string GetIPv6Address(string machineName = \"localhost\") Parameters machineName string Name of the machine. Returns string The local IPv6 address PingHost(string, int) Pings the host. public static bool PingHost(string address, int timeOut = 100) Parameters address string The address. timeOut int The time out. Returns bool True if it is pinged successfully, false otherwise"
  },
  "api/Environs.HelperClasses.PrinterManager.html": {
    "href": "api/Environs.HelperClasses.PrinterManager.html",
    "title": "Class PrinterManager | Environs API Reference",
    "keywords": "Class PrinterManager Namespace Environs.HelperClasses Assembly Environs.dll Printer manager public static class PrinterManager Inheritance object PrinterManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddPrinter(string) Adds the printer. public static bool AddPrinter(string printerName) Parameters printerName string Name of the printer. Returns bool True if the printer is added, false otherwise DeletePrinter(string) Deletes the printer. public static bool DeletePrinter(string printerName) Parameters printerName string Name of the printer. Returns bool True if the printer is deleted, false otherwise IsPrinterInstalled(string) Determines whether [is printer installed] [the specified printer name]. public static bool IsPrinterInstalled(string printerName) Parameters printerName string Name of the printer. Returns bool true if [is printer installed] [the specified printer name]; otherwise, false. RenamePrinter(string, string) Renames the printer. public static void RenamePrinter(string printerName, string newName) Parameters printerName string Name of the printer. newName string The new name. SetDefaultPrinter(string) Sets the default printer. public static void SetDefaultPrinter(string printerName) Parameters printerName string Name of the printer."
  },
  "api/Environs.HelperClasses.html": {
    "href": "api/Environs.HelperClasses.html",
    "title": "Namespace Environs.HelperClasses | Environs API Reference",
    "keywords": "Namespace Environs.HelperClasses Classes Applications Applications helpers NetworkHelper Helper methods for network related items. PrinterManager Printer manager"
  },
  "api/Environs.IPAddressExtensions.html": {
    "href": "api/Environs.IPAddressExtensions.html",
    "title": "Class IPAddressExtensions | Environs API Reference",
    "keywords": "Class IPAddressExtensions Namespace Environs Assembly Environs.dll IP address extension methods public static class IPAddressExtensions Inheritance object IPAddressExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetHostName(IPAddress) Gets the name of the host. public static string GetHostName(this IPAddress ip) Parameters ip IPAddress The ip. Returns string The host name GetHostName(string) Gets the name of the host. public static string GetHostName(this string ip) Parameters ip string The ip. Returns string The host name"
  },
  "api/Environs.LDAP.Directory.html": {
    "href": "api/Environs.LDAP.Directory.html",
    "title": "Class Directory | Environs API Reference",
    "keywords": "Class Directory Namespace Environs.LDAP Assembly Environs.dll LDAP Directory helper public class Directory : IDisposable Inheritance object Directory Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Directory(string, string, string) Initializes a new instance of the Directory class. public Directory(string userName, string password, string path) Parameters userName string Name of the user. password string The password. path string The path. Properties IsAuthenticated Gets a value indicating whether this instance is authenticated. public bool IsAuthenticated { get; } Property Value bool true if this instance is authenticated; otherwise, false. Methods Close() Closes this instance. public void Close() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. ~Directory() Finalizes an instance of the Directory class. protected ~Directory() FindActiveGroupMembers(string, bool) Finds the active group members. public ICollection<Entry> FindActiveGroupMembers(string groupName, bool recursive = false) Parameters groupName string Name of the group. recursive bool if set to true [recursive]. Returns ICollection<Entry> The results FindActiveGroups(string, params object[]) Finds the active groups. public ICollection<Entry> FindActiveGroups(string filter, params object[] args) Parameters filter string The filter. args object[] The arguments. Returns ICollection<Entry> The results FindActiveUsers(string, params object[]) Finds the active users. public ICollection<Entry> FindActiveUsers(string filter, params object[] args) Parameters filter string The filter. args object[] The arguments. Returns ICollection<Entry> The results FindActiveUsersAndGroups(string, params object[]) Finds the active users and groups. public ICollection<Entry> FindActiveUsersAndGroups(string filter, params object[] args) Parameters filter string The filter. args object[] The arguments. Returns ICollection<Entry> The results FindAll() Finds all. public ICollection<Entry> FindAll() Returns ICollection<Entry> All entries FindComputers(string, params object[]) Finds the computers. public ICollection<Entry> FindComputers(string filter, params object[] args) Parameters filter string The filter. args object[] The arguments. Returns ICollection<Entry> The results FindGroup(string) Finds the group. public Entry FindGroup(string groupName) Parameters groupName string Name of the group. Returns Entry The result FindGroupMembers(string, bool) Finds the group members. public ICollection<Entry> FindGroupMembers(string groupName, bool recursive = false) Parameters groupName string Name of the group. recursive bool if set to true [recursive]. Returns ICollection<Entry> The results FindGroups(string, params object[]) Finds the groups. public ICollection<Entry> FindGroups(string filter, params object[] args) Parameters filter string The filter. args object[] The arguments. Returns ICollection<Entry> The results FindOne() Finds the one. public Entry FindOne() Returns Entry The one. FindUserByUserName(string) Finds the name of the user by user. public Entry FindUserByUserName(string userName) Parameters userName string Name of the user. Returns Entry The result Exceptions ArgumentNullException userName FindUsers(string, params object[]) Finds the users. public ICollection<Entry> FindUsers(string filter, params object[] args) Parameters filter string The filter. args object[] The arguments. Returns ICollection<Entry> FindUsersAndGroups(string, params object[]) Finds the users and groups. public ICollection<Entry> FindUsersAndGroups(string filter, params object[] args) Parameters filter string The filter. args object[] The arguments. Returns ICollection<Entry> The results of the query See Also IDisposable"
  },
  "api/Environs.LDAP.Entry.html": {
    "href": "api/Environs.LDAP.Entry.html",
    "title": "Class Entry | Environs API Reference",
    "keywords": "Class Entry Namespace Environs.LDAP Assembly Environs.dll LDAP entry public class Entry : IDisposable Inheritance object Entry Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Entry(DirectoryEntry) Initializes a new instance of the Entry class. public Entry(DirectoryEntry directoryEntry) Parameters directoryEntry DirectoryEntry The directory entry. Exceptions ArgumentNullException directoryEntry Properties CN Gets or sets the cn. public string CN { get; set; } Property Value string The cn. Company Gets or sets the company. public string Company { get; set; } Property Value string The company. CountryCode Gets or sets the country code. public string CountryCode { get; set; } Property Value string The country code. DirectoryEntry Gets the directory entry. public DirectoryEntry DirectoryEntry { get; } Property Value DirectoryEntry The directory entry. DisplayName Gets or sets the display name. public string DisplayName { get; set; } Property Value string The display name. DistinguishedName Gets or sets the name of the distinguished. public string DistinguishedName { get; set; } Property Value string The name of the distinguished. Email Gets or sets the email. public string Email { get; set; } Property Value string The email. GivenName Gets or sets the name of the given. public string GivenName { get; set; } Property Value string The name of the given. Initials Gets or sets the initials. public string Initials { get; set; } Property Value string The initials. MemberOf Gets the member of. public IEnumerable<string> MemberOf { get; } Property Value IEnumerable<string> The member of. Name Gets or sets the name. public string Name { get; set; } Property Value string The name. Office Gets or sets the office. public string Office { get; set; } Property Value string The office. SamAccountName Gets or sets the name of the sam account. public string SamAccountName { get; set; } Property Value string The name of the sam account. TelephoneNumber Gets or sets the telephone number. public string TelephoneNumber { get; set; } Property Value string The telephone number. Title Gets or sets the title. public string Title { get; set; } Property Value string The title. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool Disposing) Parameters Disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. ~Entry() Finalizes an instance of the Entry class. protected ~Entry() GetValue(string) Gets the value. public object GetValue(string property) Parameters property string The property. Returns object Save() Saves this instance. public void Save() SetValue(string, int, object) Sets the value. public virtual void SetValue(string property, int index, object value) Parameters property string The property. index int The index. value object The value. SetValue(string, object) Sets the value. public void SetValue(string property, object value) Parameters property string The property. value object The value. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. See Also IDisposable"
  },
  "api/Environs.LDAP.html": {
    "href": "api/Environs.LDAP.html",
    "title": "Namespace Environs.LDAP | Environs API Reference",
    "keywords": "Namespace Environs.LDAP Classes Directory LDAP Directory helper Entry LDAP entry"
  },
  "api/Environs.html": {
    "href": "api/Environs.html",
    "title": "Namespace Environs | Environs API Reference",
    "keywords": "Namespace Environs Classes AuthenticationOptions Authentication options CommonClasses Common WMI classes Environment WMI environment query helper IPAddressExtensions IP address extension methods"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Environs API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Environs API Reference",
    "keywords": "Code namespace Environs.Example { /// <summary> /// Example program to demonstrate the use of the Environment class /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static void Main(string[] args) { // Example of using the Environment class to query WMI for printers on the local machine // using impersonation var ExampleObject = new Environment(options: new AuthenticationOptions { Impersonate = true }); // Call the Execute method to get the results of the query IEnumerable<dynamic> Results = ExampleObject.Execute(CommonClasses.Printers, \"root\\\\cimv2\"); // Iterate through the results and print them to the console foreach (dynamic Result in Results) { Console.WriteLine(Result.Name); } } } } Output OneNote (Desktop) Microsoft XPS Document Writer Microsoft Print to PDF ..."
  },
  "index.html": {
    "href": "index.html",
    "title": "Environs | Environs API Reference",
    "keywords": "Environs Environs is a small C# library that provides a simplified interface for working with Windows Management Instrumentation (WMI), Lightweight Directory Access Protocol (LDAP), and related functionality. It aims to make it easier to perform common operations and tasks in these areas without the need for extensive knowledge of the underlying protocols and APIs. Features WMI: Simplifies querying and managing WMI classes, objects, and properties. LDAP: Provides an intuitive interface for interacting with LDAP directories, searching for entries, and performing CRUD operations. System Helper Classes Provides a simple to use class to manage printers, discovering IP addresses, and application discovery. Installation The library can be installed via NuGet Package Manager or by manually including the DLL in your project. NuGet Package Manager Open the Console. Run the following command: dotnet add package Environs Usage Below are some examples of how to use the Environs library in your C# code: // Example of using the Environment class to query WMI for printers on the local machine // using impersonation var ExampleObject = new Environment(options: new AuthenticationOptions { Impersonate = true }); // Call the Execute method to get the results of the query IEnumerable<dynamic> Results = ExampleObject.Execute(CommonClasses.Printers, \"root\\\\cimv2\"); // Iterate through the results and print them to the console foreach (dynamic Result in Results) { Console.WriteLine(Result.Name); } Contributing Contributions are welcome! If you find a bug, have a feature request, or want to contribute code, please open an issue or submit a pull request. Make sure to follow the guidelines outlined in the CONTRIBUTING file. License This library is licensed under the Apache 2 License."
  }
}