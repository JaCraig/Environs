{
  "api/Environs.AuthenticationOptions.html": {
    "href": "api/Environs.AuthenticationOptions.html",
    "title": "Class AuthenticationOptions | Environs API Reference",
    "keywords": "Class AuthenticationOptions Authentication options Inheritance object AuthenticationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Environs Assembly: Environs.dll Syntax public class AuthenticationOptions Properties | Improve this Doc View Source Impersonate Gets or sets a value indicating whether this AuthenticationOptions is impersonate. Declaration public bool Impersonate { get; set; } Property Value Type Description bool true if impersonate; otherwise, false. | Improve this Doc View Source Password Gets or sets the password. Declaration public string Password { get; set; } Property Value Type Description string The password. | Improve this Doc View Source UserName Gets or sets the name of the user. Declaration public string UserName { get; set; } Property Value Type Description string The name of the user."
  },
  "api/Environs.CommonClasses.html": {
    "href": "api/Environs.CommonClasses.html",
    "title": "Class CommonClasses | Environs API Reference",
    "keywords": "Class CommonClasses Common WMI classes Inheritance object CommonClasses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Environs Assembly: Environs.dll Syntax public class CommonClasses Constructors | Improve this Doc View Source CommonClasses(string) Initializes a new instance of the CommonClasses class. Declaration protected CommonClasses(string name) Parameters Type Name Description string name The name. Properties | Improve this Doc View Source Battery Gets the battery. Declaration public static CommonClasses Battery { get; } Property Value Type Description CommonClasses The battery. | Improve this Doc View Source Bios Gets the bios. Declaration public static CommonClasses Bios { get; } Property Value Type Description CommonClasses The bios. | Improve this Doc View Source ComputerSystemProduct Gets the computer system product. Declaration public static CommonClasses ComputerSystemProduct { get; } Property Value Type Description CommonClasses The computer system product. | Improve this Doc View Source DataFiles Gets the data files. Declaration public static CommonClasses DataFiles { get; } Property Value Type Description CommonClasses The data files. | Improve this Doc View Source DiskDrive Gets the disk drive. Declaration public static CommonClasses DiskDrive { get; } Property Value Type Description CommonClasses The disk drive. | Improve this Doc View Source InstalledSoftware Gets the installed software. Declaration public static CommonClasses InstalledSoftware { get; } Property Value Type Description CommonClasses The installed software. | Improve this Doc View Source LoggedOnUser Gets the logged on user. Declaration public static CommonClasses LoggedOnUser { get; } Property Value Type Description CommonClasses The logged on user. | Improve this Doc View Source Memory Gets the memory. Declaration public static CommonClasses Memory { get; } Property Value Type Description CommonClasses The memory. | Improve this Doc View Source Monitor Gets the monitor. Declaration public static CommonClasses Monitor { get; } Property Value Type Description CommonClasses The monitor. | Improve this Doc View Source NetworkAdapterConfig Gets the network adapter configuration. Declaration public static CommonClasses NetworkAdapterConfig { get; } Property Value Type Description CommonClasses The network adapter configuration. | Improve this Doc View Source NetworkDrives Gets the network drives. Declaration public static CommonClasses NetworkDrives { get; } Property Value Type Description CommonClasses The network drives. | Improve this Doc View Source OperatingSystem Gets the operating system. Declaration public static CommonClasses OperatingSystem { get; } Property Value Type Description CommonClasses The operating system. | Improve this Doc View Source PrintDrivers Gets the print drivers. Declaration public static CommonClasses PrintDrivers { get; } Property Value Type Description CommonClasses The print drivers. | Improve this Doc View Source Printers Gets the printers. Declaration public static CommonClasses Printers { get; } Property Value Type Description CommonClasses The printers. | Improve this Doc View Source RunningProcesses Gets the running processes. Declaration public static CommonClasses RunningProcesses { get; } Property Value Type Description CommonClasses The running processes. | Improve this Doc View Source Services Gets the services. Declaration public static CommonClasses Services { get; } Property Value Type Description CommonClasses The services. | Improve this Doc View Source StartupCommands Gets the startup commands. Declaration public static CommonClasses StartupCommands { get; } Property Value Type Description CommonClasses The startup commands. Methods | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() Operators | Improve this Doc View Source explicit operator CommonClasses(string) Performs an explicit conversion from string to CommonClasses. Declaration public static explicit operator CommonClasses(string wmiClass) Parameters Type Name Description string wmiClass The WMI class. Returns Type Description CommonClasses The result of the conversion. | Improve this Doc View Source implicit operator string(CommonClasses) Performs an implicit conversion from CommonClasses to string. Declaration public static implicit operator string(CommonClasses wmiClass) Parameters Type Name Description CommonClasses wmiClass The WMI class. Returns Type Description string The result of the conversion."
  },
  "api/Environs.Environment.html": {
    "href": "api/Environs.Environment.html",
    "title": "Class Environment | Environs API Reference",
    "keywords": "Class Environment WMI environment query helper Inheritance object Environment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Environs Assembly: Environs.dll Syntax public class Environment Constructors | Improve this Doc View Source Environment(string, AuthenticationOptions) Initializes a new instance of the Environment class. Declaration public Environment(string server = \"localhost\", AuthenticationOptions options = null) Parameters Type Name Description string server The server. AuthenticationOptions options The options. Properties | Improve this Doc View Source Namespaces Gets or sets the namespaces. Declaration public string[] Namespaces { get; set; } Property Value Type Description string[] The namespaces. | Improve this Doc View Source Options Gets the options. Declaration public AuthenticationOptions Options { get; } Property Value Type Description AuthenticationOptions The options. | Improve this Doc View Source Server Gets the server. Declaration public string Server { get; } Property Value Type Description string The server. Methods | Improve this Doc View Source Execute(CommonClasses, string) Executes the specified management path. Declaration public IEnumerable<dynamic> Execute(CommonClasses managementPath, string nameSpace = \"root\\\\cimv2\") Parameters Type Name Description CommonClasses managementPath The management path. string nameSpace The name space. Returns Type Description IEnumerable<dynamic> The values of the management path | Improve this Doc View Source Execute(string, string) Executes the specified management path. Declaration public ManagementObjectCollection Execute(string query, string nameSpace = \"root\\\\cimv2\") Parameters Type Name Description string query The query. string nameSpace The name space. Returns Type Description ManagementObjectCollection The values of the management path"
  },
  "api/Environs.HelperClasses.Applications.html": {
    "href": "api/Environs.HelperClasses.Applications.html",
    "title": "Class Applications | Environs API Reference",
    "keywords": "Class Applications Applications helpers Inheritance object Applications Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Environs.HelperClasses Assembly: Environs.dll Syntax public static class Applications Methods | Improve this Doc View Source GetInstalledApplications(string, AuthenticationOptions) Gets the installed applications. Declaration public static IEnumerable<string> GetInstalledApplications(string machineName = \"localhost\", AuthenticationOptions options = null) Parameters Type Name Description string machineName Name of the machine. AuthenticationOptions options The options. Returns Type Description IEnumerable<string> The installed applications."
  },
  "api/Environs.HelperClasses.html": {
    "href": "api/Environs.HelperClasses.html",
    "title": "Namespace Environs.HelperClasses | Environs API Reference",
    "keywords": "Namespace Environs.HelperClasses Classes Applications Applications helpers NetworkHelper Helper methods for network related items. PrinterManager Printer manager"
  },
  "api/Environs.HelperClasses.NetworkHelper.html": {
    "href": "api/Environs.HelperClasses.NetworkHelper.html",
    "title": "Class NetworkHelper | Environs API Reference",
    "keywords": "Class NetworkHelper Helper methods for network related items. Inheritance object NetworkHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Environs.HelperClasses Assembly: Environs.dll Syntax public static class NetworkHelper Methods | Improve this Doc View Source GetIPv4Address(string) Gets the local IPv4 address. Declaration public static string GetIPv4Address(string machineName = \"localhost\") Parameters Type Name Description string machineName Name of the machine. Returns Type Description string The local IPv4 address. | Improve this Doc View Source GetIPv6Address(string) Gets the local IPv6 address. Declaration public static string GetIPv6Address(string machineName = \"localhost\") Parameters Type Name Description string machineName Name of the machine. Returns Type Description string The local IPv6 address | Improve this Doc View Source PingHost(string, int) Pings the host. Declaration public static bool PingHost(string address, int timeOut = 100) Parameters Type Name Description string address The address. int timeOut The time out. Returns Type Description bool True if it is pinged successfully, false otherwise"
  },
  "api/Environs.HelperClasses.PrinterManager.html": {
    "href": "api/Environs.HelperClasses.PrinterManager.html",
    "title": "Class PrinterManager | Environs API Reference",
    "keywords": "Class PrinterManager Printer manager Inheritance object PrinterManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Environs.HelperClasses Assembly: Environs.dll Syntax public static class PrinterManager Methods | Improve this Doc View Source AddPrinter(string) Adds the printer. Declaration public static bool AddPrinter(string printerName) Parameters Type Name Description string printerName Name of the printer. Returns Type Description bool True if the printer is added, false otherwise | Improve this Doc View Source DeletePrinter(string) Deletes the printer. Declaration public static bool DeletePrinter(string printerName) Parameters Type Name Description string printerName Name of the printer. Returns Type Description bool True if the printer is deleted, false otherwise | Improve this Doc View Source IsPrinterInstalled(string) Determines whether [is printer installed] [the specified printer name]. Declaration public static bool IsPrinterInstalled(string printerName) Parameters Type Name Description string printerName Name of the printer. Returns Type Description bool true if [is printer installed] [the specified printer name]; otherwise, false. | Improve this Doc View Source RenamePrinter(string, string) Renames the printer. Declaration public static void RenamePrinter(string printerName, string newName) Parameters Type Name Description string printerName Name of the printer. string newName The new name. | Improve this Doc View Source SetDefaultPrinter(string) Sets the default printer. Declaration public static void SetDefaultPrinter(string printerName) Parameters Type Name Description string printerName Name of the printer."
  },
  "api/Environs.html": {
    "href": "api/Environs.html",
    "title": "Namespace Environs | Environs API Reference",
    "keywords": "Namespace Environs Classes AuthenticationOptions Authentication options CommonClasses Common WMI classes Environment WMI environment query helper IPAddressExtensions IP address extension methods"
  },
  "api/Environs.IPAddressExtensions.html": {
    "href": "api/Environs.IPAddressExtensions.html",
    "title": "Class IPAddressExtensions | Environs API Reference",
    "keywords": "Class IPAddressExtensions IP address extension methods Inheritance object IPAddressExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Environs Assembly: Environs.dll Syntax public static class IPAddressExtensions Methods | Improve this Doc View Source GetHostName(IPAddress) Gets the name of the host. Declaration public static string GetHostName(this IPAddress ip) Parameters Type Name Description IPAddress ip The ip. Returns Type Description string The host name | Improve this Doc View Source GetHostName(string) Gets the name of the host. Declaration public static string GetHostName(this string ip) Parameters Type Name Description string ip The ip. Returns Type Description string The host name"
  },
  "api/Environs.LDAP.Directory.html": {
    "href": "api/Environs.LDAP.Directory.html",
    "title": "Class Directory | Environs API Reference",
    "keywords": "Class Directory LDAP Directory helper Inheritance object Directory Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Environs.LDAP Assembly: Environs.dll Syntax public class Directory : IDisposable Constructors | Improve this Doc View Source Directory(string, string, string) Initializes a new instance of the Directory class. Declaration public Directory(string userName, string password, string path) Parameters Type Name Description string userName Name of the user. string password The password. string path The path. See Also IDisposable Properties | Improve this Doc View Source IsAuthenticated Gets a value indicating whether this instance is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description bool true if this instance is authenticated; otherwise, false. See Also IDisposable Methods | Improve this Doc View Source Close() Closes this instance. Declaration public void Close() See Also IDisposable | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IDisposable | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IDisposable | Improve this Doc View Source ~Directory() Finalizes an instance of the Directory class. Declaration protected ~Directory() See Also IDisposable | Improve this Doc View Source FindActiveGroupMembers(string, bool) Finds the active group members. Declaration public ICollection<Entry> FindActiveGroupMembers(string groupName, bool recursive = false) Parameters Type Name Description string groupName Name of the group. bool recursive if set to true [recursive]. Returns Type Description ICollection<Entry> The results See Also IDisposable | Improve this Doc View Source FindActiveGroups(string, params object[]) Finds the active groups. Declaration public ICollection<Entry> FindActiveGroups(string filter, params object[] args) Parameters Type Name Description string filter The filter. object[] args The arguments. Returns Type Description ICollection<Entry> The results See Also IDisposable | Improve this Doc View Source FindActiveUsers(string, params object[]) Finds the active users. Declaration public ICollection<Entry> FindActiveUsers(string filter, params object[] args) Parameters Type Name Description string filter The filter. object[] args The arguments. Returns Type Description ICollection<Entry> The results See Also IDisposable | Improve this Doc View Source FindActiveUsersAndGroups(string, params object[]) Finds the active users and groups. Declaration public ICollection<Entry> FindActiveUsersAndGroups(string filter, params object[] args) Parameters Type Name Description string filter The filter. object[] args The arguments. Returns Type Description ICollection<Entry> The results See Also IDisposable | Improve this Doc View Source FindAll() Finds all. Declaration public ICollection<Entry> FindAll() Returns Type Description ICollection<Entry> All entries See Also IDisposable | Improve this Doc View Source FindComputers(string, params object[]) Finds the computers. Declaration public ICollection<Entry> FindComputers(string filter, params object[] args) Parameters Type Name Description string filter The filter. object[] args The arguments. Returns Type Description ICollection<Entry> The results See Also IDisposable | Improve this Doc View Source FindGroup(string) Finds the group. Declaration public Entry FindGroup(string groupName) Parameters Type Name Description string groupName Name of the group. Returns Type Description Entry The result See Also IDisposable | Improve this Doc View Source FindGroupMembers(string, bool) Finds the group members. Declaration public ICollection<Entry> FindGroupMembers(string groupName, bool recursive = false) Parameters Type Name Description string groupName Name of the group. bool recursive if set to true [recursive]. Returns Type Description ICollection<Entry> The results See Also IDisposable | Improve this Doc View Source FindGroups(string, params object[]) Finds the groups. Declaration public ICollection<Entry> FindGroups(string filter, params object[] args) Parameters Type Name Description string filter The filter. object[] args The arguments. Returns Type Description ICollection<Entry> The results See Also IDisposable | Improve this Doc View Source FindOne() Finds the one. Declaration public Entry FindOne() Returns Type Description Entry The one. See Also IDisposable | Improve this Doc View Source FindUserByUserName(string) Finds the name of the user by user. Declaration public Entry FindUserByUserName(string userName) Parameters Type Name Description string userName Name of the user. Returns Type Description Entry The result Exceptions Type Condition ArgumentNullException userName See Also IDisposable | Improve this Doc View Source FindUsers(string, params object[]) Finds the users. Declaration public ICollection<Entry> FindUsers(string filter, params object[] args) Parameters Type Name Description string filter The filter. object[] args The arguments. Returns Type Description ICollection<Entry> See Also IDisposable | Improve this Doc View Source FindUsersAndGroups(string, params object[]) Finds the users and groups. Declaration public ICollection<Entry> FindUsersAndGroups(string filter, params object[] args) Parameters Type Name Description string filter The filter. object[] args The arguments. Returns Type Description ICollection<Entry> The results of the query See Also IDisposable Implements IDisposable See Also IDisposable"
  },
  "api/Environs.LDAP.Entry.html": {
    "href": "api/Environs.LDAP.Entry.html",
    "title": "Class Entry | Environs API Reference",
    "keywords": "Class Entry LDAP entry Inheritance object Entry Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Environs.LDAP Assembly: Environs.dll Syntax public class Entry : IDisposable Constructors | Improve this Doc View Source Entry(DirectoryEntry) Initializes a new instance of the Entry class. Declaration public Entry(DirectoryEntry directoryEntry) Parameters Type Name Description DirectoryEntry directoryEntry The directory entry. Exceptions Type Condition ArgumentNullException directoryEntry See Also IDisposable Properties | Improve this Doc View Source CN Gets or sets the cn. Declaration public string CN { get; set; } Property Value Type Description string The cn. See Also IDisposable | Improve this Doc View Source Company Gets or sets the company. Declaration public string Company { get; set; } Property Value Type Description string The company. See Also IDisposable | Improve this Doc View Source CountryCode Gets or sets the country code. Declaration public string CountryCode { get; set; } Property Value Type Description string The country code. See Also IDisposable | Improve this Doc View Source DirectoryEntry Gets the directory entry. Declaration public DirectoryEntry DirectoryEntry { get; } Property Value Type Description DirectoryEntry The directory entry. See Also IDisposable | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration public string DisplayName { get; set; } Property Value Type Description string The display name. See Also IDisposable | Improve this Doc View Source DistinguishedName Gets or sets the name of the distinguished. Declaration public string DistinguishedName { get; set; } Property Value Type Description string The name of the distinguished. See Also IDisposable | Improve this Doc View Source Email Gets or sets the email. Declaration public string Email { get; set; } Property Value Type Description string The email. See Also IDisposable | Improve this Doc View Source GivenName Gets or sets the name of the given. Declaration public string GivenName { get; set; } Property Value Type Description string The name of the given. See Also IDisposable | Improve this Doc View Source Initials Gets or sets the initials. Declaration public string Initials { get; set; } Property Value Type Description string The initials. See Also IDisposable | Improve this Doc View Source MemberOf Gets the member of. Declaration public IEnumerable<string> MemberOf { get; } Property Value Type Description IEnumerable<string> The member of. See Also IDisposable | Improve this Doc View Source Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description string The name. See Also IDisposable | Improve this Doc View Source Office Gets or sets the office. Declaration public string Office { get; set; } Property Value Type Description string The office. See Also IDisposable | Improve this Doc View Source SamAccountName Gets or sets the name of the sam account. Declaration public string SamAccountName { get; set; } Property Value Type Description string The name of the sam account. See Also IDisposable | Improve this Doc View Source TelephoneNumber Gets or sets the telephone number. Declaration public string TelephoneNumber { get; set; } Property Value Type Description string The telephone number. See Also IDisposable | Improve this Doc View Source Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description string The title. See Also IDisposable Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IDisposable | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool Disposing) Parameters Type Name Description bool Disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IDisposable | Improve this Doc View Source ~Entry() Finalizes an instance of the Entry class. Declaration protected ~Entry() See Also IDisposable | Improve this Doc View Source GetValue(string) Gets the value. Declaration public object GetValue(string property) Parameters Type Name Description string property The property. Returns Type Description object See Also IDisposable | Improve this Doc View Source Save() Saves this instance. Declaration public void Save() See Also IDisposable | Improve this Doc View Source SetValue(string, int, object) Sets the value. Declaration public virtual void SetValue(string property, int index, object value) Parameters Type Name Description string property The property. int index The index. object value The value. See Also IDisposable | Improve this Doc View Source SetValue(string, object) Sets the value. Declaration public void SetValue(string property, object value) Parameters Type Name Description string property The property. object value The value. See Also IDisposable | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also IDisposable Implements IDisposable See Also IDisposable"
  },
  "api/Environs.LDAP.html": {
    "href": "api/Environs.LDAP.html",
    "title": "Namespace Environs.LDAP | Environs API Reference",
    "keywords": "Namespace Environs.LDAP Classes Directory LDAP Directory helper Entry LDAP entry"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Environs API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Environs API Reference",
    "keywords": "Code namespace Environs.Example { /// <summary> /// Example program to demonstrate the use of the Environment class /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static void Main(string[] args) { // Example of using the Environment class to query WMI for printers on the local machine // using impersonation var ExampleObject = new Environment(options: new AuthenticationOptions { Impersonate = true }); // Call the Execute method to get the results of the query IEnumerable<dynamic> Results = ExampleObject.Execute(CommonClasses.Printers, \"root\\\\cimv2\"); // Iterate through the results and print them to the console foreach (dynamic Result in Results) { Console.WriteLine(Result.Name); } } } } Output OneNote (Desktop) Microsoft XPS Document Writer Microsoft Print to PDF ..."
  },
  "index.html": {
    "href": "index.html",
    "title": "Environs | Environs API Reference",
    "keywords": "Environs Environs is a small C# library that provides a simplified interface for working with Windows Management Instrumentation (WMI), Lightweight Directory Access Protocol (LDAP), and related functionality. It aims to make it easier to perform common operations and tasks in these areas without the need for extensive knowledge of the underlying protocols and APIs. Features WMI: Simplifies querying and managing WMI classes, objects, and properties. LDAP: Provides an intuitive interface for interacting with LDAP directories, searching for entries, and performing CRUD operations. System Helper Classes Provides a simple to use class to manage printers, discovering IP addresses, and application discovery. Installation The library can be installed via NuGet Package Manager or by manually including the DLL in your project. NuGet Package Manager Open the Console. Run the following command: dotnet add package Environs Usage Below are some examples of how to use the Environs library in your C# code: // Example of using the Environment class to query WMI for printers on the local machine // using impersonation var ExampleObject = new Environment(options: new AuthenticationOptions { Impersonate = true }); // Call the Execute method to get the results of the query IEnumerable<dynamic> Results = ExampleObject.Execute(CommonClasses.Printers, \"root\\\\cimv2\"); // Iterate through the results and print them to the console foreach (dynamic Result in Results) { Console.WriteLine(Result.Name); } Contributing Contributions are welcome! If you find a bug, have a feature request, or want to contribute code, please open an issue or submit a pull request. Make sure to follow the guidelines outlined in the CONTRIBUTING file. License This library is licensed under the Apache 2 License."
  }
}